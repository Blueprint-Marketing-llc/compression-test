#!/usr/bin/python

# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from huffman import Huffman
from bit_bucket import BitBucket
from common_utils import FormatAsBits
from common_utils import ListToStr

request_freq_table = [
  (   0,      0),(   1,      0),(   2,      0),
  (   3,      0),(   4,      0),(   5,      0),
  (   6,      0),(   7,      0),(   8,      0),
  (   9,      0),(  10,      0),(  11,      0),
  (  12,      0),(  13,      0),(  14,      0),
  (  15,      0),(  16,      0),(  17,      0),
  (  18,      0),(  19,      0),(  20,      0),
  (  21,      0),(  22,      0),(  23,      0),
  (  24,      0),(  25,      0),(  26,      0),
  (  27,      0),(  28,      0),(  29,      0),
  (  30,      0),(  31,      0),( ' ',   1015),
  ( '!',   1070),( '"',    248),( '#',    134),
  ( '$',    133),( '%',  51699),( '&',  35390),
  ( "'",    103),( '(',    897),( ')',    958),
  ( '*',   1090),( '+',   1047),( ',',   4819),
  ( '-',  65428),( '.', 107763),( '/', 198044),
  ( '0',  96411),( '1',  97568),( '2', 100401),
  ( '3',  65167),( '4',  44510),( '5',  48391),
  ( '6',  43457),( '7',  47569),( '8',  43049),
  ( '9',  48704),( ':',  50383),( ';',   6713),
  ( '<',     16),( '=',  55594),( '>',     50),
  ( '?',  10299),( '@',    557),( 'A',  20358),
  ( 'B',  11689),( 'C',  14173),( 'D',  15341),
  ( 'E',   8779),( 'F',  22416),( 'G',   5665),
  ( 'H',   6092),( 'I',   7661),( 'J',   4912),
  ( 'K',   3239),( 'L',   6283),( 'M',   7952),
  ( 'N',   5858),( 'O',   6065),( 'P',   6940),
  ( 'Q',   4768),( 'R',   7305),( 'S',   8037),
  ( 'T',  10439),( 'U',   5850),( 'V',   5839),
  ( 'W',   6682),( 'X',   6246),( 'Y',   5340),
  ( 'Z',   3844),( '[',    286),('\\',      0),
  ( ']',    295),( '^',    144),( '_',  48992),
  ( '`',      9),( 'a', 155039),( 'b',  47481),
  ( 'c', 101510),( 'd',  71484),( 'e', 266868),
  ( 'f',  80484),( 'g',  60734),( 'h',  87393),
  ( 'i', 128602),( 'j',  23163),( 'k',  19215),
  ( 'l',  88869),( 'm',  85724),( 'n',  99945),
  ( 'o', 121614),( 'p', 127713),( 'q',  10028),
  ( 'r', 170852),( 's', 125075),( 't', 192825),
  ( 'u',  52443),( 'v',  21283),( 'w',  72409),
  ( 'x',  16587),( 'y',  19104),( 'z',   9528),
  ( '{',     30),( '|',    986),( '}',     30),
  ( '~',    805),( 127,      0),( 128,      0),
  ( 129,      0),( 130,      0),( 131,      0),
  ( 132,      0),( 133,      0),( 134,      0),
  ( 135,      0),( 136,      0),( 137,      0),
  ( 138,      0),( 139,      0),( 140,      0),
  ( 141,      0),( 142,      0),( 143,      0),
  ( 144,      0),( 145,      0),( 146,      0),
  ( 147,      0),( 148,      0),( 149,      0),
  ( 150,      0),( 151,      0),( 152,      0),
  ( 153,      0),( 154,      0),( 155,      0),
  ( 156,      0),( 157,      0),( 158,      0),
  ( 159,      0),( 160,      0),( 161,      0),
  ( 162,      0),( 163,      0),( 164,      0),
  ( 165,      0),( 166,      0),( 167,      0),
  ( 168,      0),( 169,      0),( 170,      0),
  ( 171,      0),( 172,      0),( 173,      0),
  ( 174,      0),( 175,      0),( 176,      0),
  ( 177,      0),( 178,      0),( 179,      0),
  ( 180,      0),( 181,      0),( 182,      0),
  ( 183,      0),( 184,      0),( 185,      0),
  ( 186,      0),( 187,      0),( 188,      0),
  ( 189,      0),( 190,      0),( 191,      0),
  ( 192,      0),( 193,      0),( 194,      0),
  ( 195,      0),( 196,      0),( 197,      0),
  ( 198,      0),( 199,      0),( 200,      0),
  ( 201,      0),( 202,      0),( 203,      0),
  ( 204,      0),( 205,      0),( 206,      0),
  ( 207,      0),( 208,      0),( 209,      0),
  ( 210,      0),( 211,      0),( 212,      0),
  ( 213,      0),( 214,      0),( 215,      0),
  ( 216,      0),( 217,      0),( 218,      0),
  ( 219,      0),( 220,      0),( 221,      0),
  ( 222,      0),( 223,      0),( 224,      0),
  ( 225,      0),( 226,      0),( 227,      0),
  ( 228,      0),( 229,      0),( 230,      0),
  ( 231,      0),( 232,      0),( 233,      0),
  ( 234,      0),( 235,      0),( 236,      0),
  ( 237,      0),( 238,      0),( 239,      0),
  ( 240,      0),( 241,      0),( 242,      0),
  ( 243,      0),( 244,      0),( 245,      0),
  ( 246,      0),( 247,      0),( 248,      0),
  ( 249,      0),( 250,      0),( 251,      0),
  ( 252,      0),( 253,      0),( 254,      0),
  ( 255,      0),( 256,  98008),
]#


test_data = [
    "abbcccddddeeeee",
    "foobarbaz",
    "0-2rklnsvkl;-23kDFSi01k0=",
    "-9083480-12hjkadsgf8912345kl;hjajkl;       `123890",
    "\0\0-3;jsdf"
    ]

def MakeReadableString(val):
  printable = string.digits + string.letters + string.punctuation + ' ' + "\t"
  out = []
  for c in val:
    if c in printable:
      out.append("   %c " % c)
    else:
      out.append("0x%02x " % ord(c))
  return ''.join(out)

def main():
  h = Huffman(request_freq_table)
  for s in test_data:
    print " encoding: ", s
    sp = [ord(c) for c in s]
    e_result = BitBucket()
    h.EncodeToBB(e_result, sp, True)
    print "      e_result: ", FormatAsBits(e_result.GetAllBits())

    d_result = ListToStr(h.DecodeFromBB(e_result, True, -1))
    if d_result != s:
      print "difference found: d_result(%s) vs orig(%s)" % (repr(d_result),
                                                            repr(s))
    else:
      print "It worked: ", s
    print

main()

